////////////////////////////////////////////
// 		SETUP STUFF
////////////////////////////////////////////


////////////////////////////////////////////
// 		IMPORTS
////////////////////////////////////////////

@import 'grid';

////////////////////////////////////////////
// 		VARIABLES
////////////////////////////////////////////

$buttonbackcolor: #FF6600;
$iconColor: lightgrey;
$downloadIconBack: #CC6633;
$subNavMenuBackColor: darken(white,5%);
$subNavMenuFontColor: grey;

////////////////////////////////////////////
///// 		MIXINS
///////////////////////////////////////////////

@mixin transformTranslate($x,$y) {
	-webkit-transform: translate($x,$y);
	-moz-transform: translate($x,$y);
	-o-transform: translate($x,$y);
	-ms-transform: translate($x,$y);
}

@mixin transitionEffectAll ($time) {
	-webkit-transition: all $time;
	-moz-transition: all $time;
	-o-transition: all $time;
	-ms-transition: all $time;
}

@mixin transitionEffectSelected ($time) {
	-webkit-transition: color $time ease-in-out, border-color $time ease-in-out, background $time ease-in-out, opacity $time ease-in-out;
	-moz-transition: color $time ease-in-out, border-color $time ease-in-out, background $time ease-in-out, opacity $time ease-in-out;
	-o-transition: color $time ease-in-out, border-color $time ease-in-out, background $time ease-in-out, opacity $time ease-in-out;
	-ms-transition: color $time ease-in-out, border-color $time ease-in-out, background $time ease-in-out, opacity $time ease-in-out;
}

@mixin headerFixedIconButtons {
	// padding: 1.5em;
	padding-top: 1.5em;
	padding-bottom: 1.5em;
	padding-left: 1.3em;
	padding-right: 1em;
	border: 2px solid $iconColor;
	border-radius: 3px;
	color: grey;
	@include transitionEffectSelected(0.15s);
	@include desktopR {
		// padding: 1em;
		display: none;
	}
	&:hover {
		color: $downloadIconBack;
		border: 2px solid $downloadIconBack;
	}
}

@mixin headerFixedArrowButtons {
	padding-right: 1.9em;
	// padding-left: 1.9em;
	padding-left: 1.7em;
	@include desktopR {
		// padding-right: 1.4em;
		// padding-left: 1.4em;
	}
}

@mixin responsiveNavMenu {
	& .mainNavBar {
		margin: 0;
		padding: 0;

		// this is the menu icon that people see
		& .specialNavMenu {
			// enable relative positioning to set z-index
			// position: relative;
			// z-index: 500;
			display: inline-block;
			color: darken($iconColor,30%);
			border: 2px solid $iconColor;
			padding: 1em 1.2em 1em 1.2em;
			border-radius: 5px;
			@include transitionEffectSelected(0.15s);
			// text-shadow: 0 0 1px #203A8B;
			cursor:pointer;
			&:hover {
				color: $downloadIconBack;
				border: 2px solid $downloadIconBack;
			}
		}

		& li {
			list-style-type: none;
			position: relative;
			&:hover {
				display: block;
				float: none;
				// to edit the ul.responsiveNavList sub menu simply cut and paste it out of the &:hover into a position within & li
				& ul.responsiveNavList {
					position: absolute;
					// since you've set .responsiveNavList to display none in the main CSS code you must re-enable the display of it by using display: list-item...
					// this is the position to do it
					display: list-item;
					margin: 0;
					padding: 0;
					float: left;
					background: $subNavMenuBackColor;
					// left: 8%;
					top: 101%;
					width: 177%;
					border-radius: 15px;
					& li {
						display: list-item;
						float: none;
						list-style: none;
						margin: 0;
						padding: 0;
					}
					& a {
						display: block;
						text-decoration: none;
						// border: 2px solid $iconColor;
						border-radius: 3px;
						color: $subNavMenuFontColor;
						// padding: 1em 1.6em 1em 1.6em;
						padding: 1em 0.9em 1em 0.9em;
						text-transform: uppercase;
						// width: auto;
						@include transitionEffectSelected(0.15s);
						&:hover {
							color: $downloadIconBack;
							// border: 2px solid $downloadIconBack;
						}
					}
				}
			}

		}	
	}
}

////////////////////////////////////////////
// 		MAIN CODE
////////////////////////////////////////////

header#demo-header {
	position: fixed;
	height:109px;
	background: white;
	display: block;
	// we use the value of 13 to get the navbar all across the page
	// looks like 12.5 was better... 13 was too long which caused the icon nav buttons to skirt perilously close to the right edge
	@include column(12.5);
	margin: 0;
	// we set the z-index as high as it goes to be rid of the effect where the navbar appears above the fixed header
	z-index: 10000;
	border-bottom: 1px solid lightgrey;
	// the padding top is necessary to push the elements down, position them and manually centre them
	// you could also manually push each of the subcontainers below down giving you more leeway to position them -- comment out this padding top then
	// padding-top:3%;
	vertical-align: baseline;

	////////////////////////////////////////////
	///// 		FLEX BOX
	////////////////////////////////////////////
	
	&.flex-container {
		display: flex;
		flex-flow: row wrap;
		justify-content: space around;
		align-items: center;
	}

	////////////////////////////////////////////

	////////////////////////////////////////////
	///// 		LEFT SIDE BUTTONS
	///////////////////////////////////////////////
	
	// these are the left hand side buttons
	
	& .buttonContainer {
		position: relative;
		// width: 100%;
		height:100%;
		// width: 75%;
		@include column(9);
		// padding: 0;
		// padding-top: 0.5%;
		// padding-top: 3.4%;
		padding-right: 0;
		margin: 0;
		vertical-align: baseline;
		@include desktopRHD {
			padding-top: 3%;
		}
		@include desktopR {
			// @include column(6);
			padding-top: 4.6%;
		}
		@include tabletR {
			padding-top: 5.5%;
		}
		@include phabletR {
			padding-top: 6%;
		}
		@include phoneR {
			display: none;
		}
		& a {
			background: $buttonbackcolor;
			padding: 3% 3% 3% 3%;
			margin: 2px;
			border-radius: 5px;
			text-decoration: none;
			text-transform: uppercase;
			color: white;
			font-size: 1.25em;
			@include phabletR {
				padding: 3% 2% 3% 2%;
			}
			&:first-child {
				margin-left: 13px;
			}
			&:nth-child(2) {
				background: grey;
			}
		}
	}

	///////////////////////////////////////////////


	////////////////////////////////////////////
	///// 		RIGHT SIDE ICON NAV BUTTONS
	///////////////////////////////////////////////
	
	& .iconContainer {
		// position: relative;
		@include column(3);
		margin: 0;
		padding: 0;
		padding-top: 4.3%;
		margin-bottom: 3%;
		vertical-align: baseline;

		&.flex-container {
			display: flex;
			flex-flow: row wrap;
			justify-content: space between;
			align-items: center;
		}

		& .specialNavMenu {
			display: none;
		}
		& .responsiveNavList {
			display: none;
		}
		@include desktopR {
			// @include column(6);
			padding-left: 0;
			padding-right: 0;
			margin-bottom: 0;
			// padding-top: 3.2%;
			padding-top: 0.5%;
			@include responsiveNavMenu;
		}
		@include tabletR {
			// padding-top: 3.5%;
			padding-top: 0.5%;
		}
		@include phabletR {
			// padding-top: 4%;
			padding-top: 0.5%;
		}
		@include phoneR {
			padding-top: 0.5%;
			padding-left: 5%;
		}

		& a {
			display: inline;
			// ironically I commented out these same lines which screwed up the navbar on desktop size
			// I required this because at this size the icon nav buttons were bumping into each other and required margins.  I suppose I could have eliminated the lines however that would have meant adjusting several other sections so I didn't both and simply wrote a media query for this condition.
			@include desktopRHD {
				height: 4em;
				width: 4em;
				line-height: 3.75em;
				margin: 5px;
			}
			padding: 0;
		}
		& a.back {
			@include headerFixedIconButtons;
			padding-right: 1.2em;
		}
		& a.download {
			@include headerFixedIconButtons;
			background:$downloadIconBack;
			color: white;
			&:hover {
				background: darken($downloadIconBack,10%);
			}
		}
		& a.left {
			@include headerFixedIconButtons;
			@include headerFixedArrowButtons;
		}
		& a.right {
			@include headerFixedIconButtons;
			@include headerFixedArrowButtons;
		}
	}
	
	///////////////////////////////////////////////
	
	
	
}